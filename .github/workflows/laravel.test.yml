name: Code Style and Tests

on: push

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Front End Dependencies
        run: npm ci

      - name: ESLint JavaScript Coding Style
        run: npm run lint

      - name: Build Front End Assets
        run: npm run build

      - name: Archive Front End Assets
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: public/build
#          retention-days: 1

  code-style-and-tests:
    runs-on: ubuntu-latest
    needs:
      - eslint
    steps:
      - uses: actions/checkout@v3

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Download Workflow Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: public/build

      - name: Copy .env.example
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Laravel Pint Coding Style
        run: composer pint:fix -- --test

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Set Cache Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create SQLite Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit & Pest
        env:
          DB_CONNECTION: sqlite_testing
          DB_DATABASE: database/database.sqlite
        run: php artisan test
